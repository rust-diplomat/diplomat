---
source: macro/src/lib.rs
expression: "rustfmt_code(&gen_bridge(parse_quote! {\n                            mod ffi\n                            {\n                                struct Foo {} impl Foo\n                                {\n                                    pub fn to_string(&self, to: &mut DiplomatWrite) ->\n                                    Result<(), ()> { unimplemented!() }\n                                }\n                            }\n                        }).to_token_stream().to_string())"
---
mod ffi {
    #[repr(C)]
    struct Foo {}
    impl Foo {
        pub fn to_string(&self, to: &mut DiplomatWrite) -> Result<(), ()> {
            unimplemented!()
        }
    }
    use core::ffi::c_void;
    use diplomat_runtime::*;
    #[no_mangle]
    extern "C" fn Foo_to_string(
        this: &Foo,
        to: &mut diplomat_runtime::DiplomatWrite,
    ) -> diplomat_runtime::DiplomatResult<(), ()> {
        let ret = this.to_string(to);
        to.flush();
        ret.into()
    }
}
