// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _ICU4XFixedDecimalFormatterOptionsFfi extends ffi.Struct {
  @ffi.Int32()
  external int groupingStrategy;
  @ffi.Bool()
  external bool someOtherConfig;
}

final class ICU4XFixedDecimalFormatterOptions {
  ICU4XFixedDecimalGroupingStrategy groupingStrategy;
  bool someOtherConfig;

  // ignore: unused_element
  // Internal constructor from FFI.
  // This struct contains borrowed fields, so this takes in a list of
  // "edges" corresponding to where each lifetime's data may have been borrowed from
  // and passes it down to individual fields containing the borrow.
  // This method does not attempt to handle any dependencies between lifetimes, the caller
  // should handle this when constructing edge arrays.
  ICU4XFixedDecimalFormatterOptions._(_ICU4XFixedDecimalFormatterOptionsFfi underlying) :
    groupingStrategy = ICU4XFixedDecimalGroupingStrategy.values[underlying.groupingStrategy],
    someOtherConfig = underlying.someOtherConfig;

  // ignore: unused_element
  _ICU4XFixedDecimalFormatterOptionsFfi _pointer(ffi.Allocator temp) {
    final pointer = temp<_ICU4XFixedDecimalFormatterOptionsFfi>();
    pointer.ref.groupingStrategy = groupingStrategy.index;
    pointer.ref.someOtherConfig = someOtherConfig;
    return pointer.ref;
  }

  factory ICU4XFixedDecimalFormatterOptions({ICU4XFixedDecimalGroupingStrategy? groupingStrategy, bool? someOtherConfig}) {
    final result = _ICU4XFixedDecimalFormatterOptions_default();
    final dart = ICU4XFixedDecimalFormatterOptions._(result);
    if (groupingStrategy != null) {
      dart.groupingStrategy = groupingStrategy;
    }
    if (someOtherConfig != null) {
      dart.someOtherConfig = someOtherConfig;
    }
    return dart;
  }

  @override
  bool operator ==(Object other) =>
      other is ICU4XFixedDecimalFormatterOptions &&
      other.groupingStrategy == this.groupingStrategy &&
      other.someOtherConfig == this.someOtherConfig;

  @override
  int get hashCode => Object.hashAll([
        this.groupingStrategy,
        this.someOtherConfig,
      ]);
}

@ffi.Native<_ICU4XFixedDecimalFormatterOptionsFfi Function()>(isLeaf: true, symbol: 'ICU4XFixedDecimalFormatterOptions_default')
// ignore: non_constant_identifier_names
external _ICU4XFixedDecimalFormatterOptionsFfi _ICU4XFixedDecimalFormatterOptions_default();
