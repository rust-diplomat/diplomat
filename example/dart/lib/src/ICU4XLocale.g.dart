// generated by diplomat-tool

part of 'lib.g.dart';

/// An ICU4X Locale, capable of representing strings like `"en-US"`.
///
/// See the [Rust documentation for `Locale`](https://docs.rs/icu/latest/icu/locid/struct.Locale.html) for more information.
final class ICU4XLocale implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _ffi;

  // These are "used" in the sense that they keep dependencies alive
  // ignore: unused_field
  final core.List<Object> _selfEdge;

  // This takes in a list of lifetime edges (including for &self borrows)
  // corresponding to data this may borrow from. These should be flat arrays containing
  // references to objects, and this object will hold on to them to keep them alive and
  // maintain borrow validity.
  ICU4XLocale._fromFfi(this._ffi, this._selfEdge) {
    if (_selfEdge.isEmpty) {
      _finalizer.attach(this, _ffi.cast());
    }
  }

  static final _finalizer = ffi.NativeFinalizer(ffi.Native.addressOf(_icu4x_ICU4XLocale_mv1_destroy));

  /// Construct an [`ICU4XLocale`] from a locale identifier represented as a string.
  factory ICU4XLocale(String name) {
    final temp = ffi2.Arena();
    final nameView = name.utf8View;
    final result = _icu4x_ICU4XLocale_new_mv1(nameView.allocIn(temp), nameView.length);
    temp.releaseAll();
    return ICU4XLocale._fromFfi(result, []);
  }
}

@meta.ResourceIdentifier('icu4x_ICU4XLocale_mv1_destroy')
@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Void>)>(isLeaf: true, symbol: 'icu4x_ICU4XLocale_mv1_destroy')
// ignore: non_constant_identifier_names
external void _icu4x_ICU4XLocale_mv1_destroy(ffi.Pointer<ffi.Void> self);

@meta.ResourceIdentifier('icu4x_ICU4XLocale_new_mv1')
@ffi.Native<ffi.Pointer<ffi.Opaque> Function(ffi.Pointer<ffi.Uint8>, ffi.Size)>(isLeaf: true, symbol: 'icu4x_ICU4XLocale_new_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_ICU4XLocale_new_mv1(ffi.Pointer<ffi.Uint8> nameData, int nameLength);
