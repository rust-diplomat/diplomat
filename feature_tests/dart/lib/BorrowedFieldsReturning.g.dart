// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _BorrowedFieldsReturningFfi extends ffi.Struct {
  external _SliceUtf8 bytes;
}

final class BorrowedFieldsReturning {
  final _BorrowedFieldsReturningFfi _underlying;

  BorrowedFieldsReturning._(this._underlying);

  factory BorrowedFieldsReturning() {
    final pointer = ffi2.calloc<_BorrowedFieldsReturningFfi>();
    final result = BorrowedFieldsReturning._(pointer.ref);
    _callocFree.attach(result, pointer.cast());
    return result;
  }

  String get bytes => Utf8Decoder().convert(_underlying.bytes._pointer.asTypedList(_underlying.bytes._length));
  set bytes(String bytes) {
    ffi2.calloc.free(_underlying.bytes._pointer);
    _underlying.bytes._length = bytes.utf8Length;
    _underlying.bytes._pointer = Utf8Encoder().allocConvert(ffi2.calloc, bytes, length: _underlying.bytes._length);
  }

  @override
  bool operator ==(Object other) =>
      other is BorrowedFieldsReturning &&
      other._underlying.bytes == _underlying.bytes;

  @override
  int get hashCode => Object.hashAll([
        _underlying.bytes,
      ]);
}
