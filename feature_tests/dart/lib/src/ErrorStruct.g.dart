// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _ErrorStructFfi extends ffi.Struct {
  @ffi.Int32()
  external int i;
  @ffi.Int32()
  external int j;
}

final class ErrorStruct {
  int i;
  int j;

  ErrorStruct({required this.i, required this.j});

  // ignore: unused_element
  // Internal constructor from FFI.
  // This struct contains borrowed fields, so this takes in a list of
  // "edges" corresponding to where each lifetime's data may have been borrowed from
  // and passes it down to individual fields containing the borrow.
  // This method does not attempt to handle any dependencies between lifetimes, the caller
  // should handle this when constructing edge arrays.
  ErrorStruct._(_ErrorStructFfi underlying) :
    i = underlying.i,
    j = underlying.j;

  // ignore: unused_element
  _ErrorStructFfi _pointer(ffi.Allocator temp) {
    final pointer = temp<_ErrorStructFfi>();
    pointer.ref.i = i;
    pointer.ref.j = j;
    return pointer.ref;
  }

  @override
  bool operator ==(Object other) =>
      other is ErrorStruct &&
      other.i == this.i &&
      other.j == this.j;

  @override
  int get hashCode => Object.hashAll([
        this.i,
        this.j,
      ]);
}
