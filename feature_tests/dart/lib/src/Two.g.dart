// generated by diplomat-tool

part of 'lib.g.dart';

final class Two implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _underlying;

  final core.List<Object> _edgeSelf;
  // ignore: unused_field
  final core.List<Object> _edgeA;
  // ignore: unused_field
  final core.List<Object> _edgeB;

  // Internal constructor from FFI.
  // This takes in a list of lifetime edges (including for &self borrows)
  // corresponding to data this may borrow from. These should be flat arrays containing
  // references to objects, and this object will hold on to them to keep them alive and
  // maintain borrow validity.
  Two._(this._underlying, {core.List<Object> edgeSelf = const [], required core.List<Object> edgeA, required core.List<Object> edgeB}) : this._edgeSelf = edgeSelf, this._edgeA = edgeA, this._edgeB = edgeB {
    if (this._edgeSelf.isEmpty) {
      // Owned
      _finalizer.attach(this, _underlying.cast());
    }
  }

  static final _finalizer = ffi.NativeFinalizer(ffi.Native.addressOf(_Two_destroy));
}

@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Void>)>(isLeaf: true, symbol: 'Two_destroy')
// ignore: non_constant_identifier_names
external void _Two_destroy(ffi.Pointer<ffi.Void> self);
