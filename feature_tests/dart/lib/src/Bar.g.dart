// generated by diplomat-tool

part of 'lib.g.dart';

final class Bar implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _underlying;

  final core.List<Object> _edgeSelf;
  // ignore: unused_field
  final core.List<Object> _edgeB;
  // ignore: unused_field
  final core.List<Object> _edgeA;

  // Internal constructor from FFI.
  // This takes in a list of lifetime edges (including for &self borrows)
  // corresponding to data this may borrow from. These should be flat arrays containing
  // references to objects, and this object will hold on to them to keep them alive and
  // maintain borrow validity.
  Bar._(this._underlying, {core.List<Object> edgeSelf = const [], required core.List<Object> edgeB, required core.List<Object> edgeA}) : this._edgeSelf = edgeSelf, this._edgeB = edgeB, this._edgeA = edgeA {
    if (this._edgeSelf.isEmpty) {
      // Owned
      _finalizer.attach(this, _underlying.cast());
    }
  }

  static final _finalizer = ffi.NativeFinalizer(ffi.Native.addressOf(_Bar_destroy));

  Foo get foo {
    final result = _Bar_foo(_underlying);
    return Foo._(result, edgeSelf: [this], edgeA: [this]);
  }
}

@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Void>)>(isLeaf: true, symbol: 'Bar_destroy')
// ignore: non_constant_identifier_names
external void _Bar_destroy(ffi.Pointer<ffi.Void> self);

@ffi.Native<ffi.Pointer<ffi.Opaque> Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'Bar_foo')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _Bar_foo(ffi.Pointer<ffi.Opaque> self);
