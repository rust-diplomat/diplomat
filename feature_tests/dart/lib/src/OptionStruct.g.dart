// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _OptionStructFfi extends ffi.Struct {
  external ffi.Pointer<ffi.Opaque> a;
  external ffi.Pointer<ffi.Opaque> b;
  @ffi.Uint32()
  external int c;
  external ffi.Pointer<ffi.Opaque> d;
}

final class OptionStruct {
  final OptionOpaque? a;
  final OptionOpaqueChar? b;
  final int c;
  final OptionOpaque? d;

  // ignore: unused_element
  OptionStruct._(_OptionStructFfi underlying) :
    a = underlying.a.address == 0 ? null : OptionOpaque._(underlying.a, true),
    b = underlying.b.address == 0 ? null : OptionOpaqueChar._(underlying.b, true),
    c = underlying.c,
    d = underlying.d.address == 0 ? null : OptionOpaque._(underlying.d, true);

  // ignore: unused_element
  _OptionStructFfi _pointer(ffi.Allocator temp) {
    final pointer = temp<_OptionStructFfi>();
    return pointer.ref;
  }

  @override
  bool operator ==(Object other) =>
      other is OptionStruct &&
      other.a == this.a &&
      other.b == this.b &&
      other.c == this.c &&
      other.d == this.d;

  @override
  int get hashCode => Object.hashAll([
        this.a,
        this.b,
        this.c,
        this.d,
      ]);
}
