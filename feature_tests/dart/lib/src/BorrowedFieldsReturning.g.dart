// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _BorrowedFieldsReturningFfi extends ffi.Struct {
  external _SliceUtf8 bytes;
}

final class BorrowedFieldsReturning {
  String bytes;
  // ignore: unused element
  final core.List<Object> _edgeA;

  BorrowedFieldsReturning({required this.bytes}) : _edgeA = [];

  // ignore: unused_element
  // Internal constructor from FFI.
  // This struct contains borrowed fields, so this takes in a list of
  // "edges" corresponding to where each lifetime's data may have been borrowed from
  // and passes it down to individual fields containing the borrow.
  // This method does not attempt to handle any dependencies between lifetimes, the caller
  // should handle this when constructing edge arrays.
  BorrowedFieldsReturning._(_BorrowedFieldsReturningFfi underlying, {required core.List<Object> edgeA}) :
    _edgeA = edgeA,
    bytes = Utf8Decoder().convert(underlying.bytes._pointer.asTypedList(underlying.bytes._length));

  // ignore: unused_element
  _BorrowedFieldsReturningFfi _pointer(ffi.Allocator temp) {
    final pointer = temp<_BorrowedFieldsReturningFfi>();
    final bytesView = bytes.utf8View;
    pointer.ref.bytes._pointer = bytesView.pointer(temp);
    pointer.ref.bytes._length = bytesView.length;
    return pointer.ref;
  }

  @override
  bool operator ==(Object other) =>
      other is BorrowedFieldsReturning &&
      other.bytes == this.bytes;

  @override
  int get hashCode => Object.hashAll([
        this.bytes,
      ]);
}
