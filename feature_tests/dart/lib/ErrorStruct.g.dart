// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _ErrorStructFfi extends ffi.Struct {
  @ffi.Int32()
  external int i;
  @ffi.Int32()
  external int j;
}

final class ErrorStruct {
  final _ErrorStructFfi _underlying;

  ErrorStruct._(this._underlying);

  factory ErrorStruct() {
    final pointer = ffi2.calloc<_ErrorStructFfi>();
    final result = ErrorStruct._(pointer.ref);
    _callocFree.attach(result, pointer.cast());
    return result;
  }

  int get i => _underlying.i;
  set i(int i) {
    _underlying.i = i;
  }

  int get j => _underlying.j;
  set j(int j) {
    _underlying.j = j;
  }

  @override
  bool operator ==(Object other) =>
      other is ErrorStruct &&
      other._underlying.i == _underlying.i &&
      other._underlying.j == _underlying.j;

  @override
  int get hashCode => Object.hashAll([
        _underlying.i,
        _underlying.j,
      ]);
}
