// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _ImportedStructFfi extends ffi.Struct {
  @ffi.Int32()
  external int foo;
  @ffi.Uint8()
  external int count;
}

final class ImportedStruct {
  final _ImportedStructFfi _underlying;

  ImportedStruct._(this._underlying);

  factory ImportedStruct() {
    final pointer = ffi2.calloc<_ImportedStructFfi>();
    final result = ImportedStruct._(pointer.ref);
    _callocFree.attach(result, pointer.cast());
    return result;
  }

  UnimportedEnum get foo => UnimportedEnum.values[_underlying.foo];
  set foo(UnimportedEnum foo) {
    _underlying.foo = foo.index;
  }

  int get count => _underlying.count;
  set count(int count) {
    _underlying.count = count;
  }

  @override
  bool operator ==(Object other) =>
      other is ImportedStruct &&
      other._underlying.foo == _underlying.foo &&
      other._underlying.count == _underlying.count;

  @override
  int get hashCode => Object.hashAll([
        _underlying.foo,
        _underlying.count,
      ]);
}
