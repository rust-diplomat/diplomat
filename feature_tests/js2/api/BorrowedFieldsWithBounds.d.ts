// generated by diplomat-tool

import type { Foo } from "./Foo"
import type { u8, i8, u16, i16, u32, i32, u64, i64, usize, isize, f32, f64, pointer, char } from "./diplomat-runtime.d.ts";


export class BorrowedFieldsWithBounds {
    #fieldA;
    get fieldA() : String;
    set fieldA(value: String); 
    #fieldB;
    get fieldB() : String;
    set fieldB(value: String); 
    #fieldC;
    get fieldC() : String;
    set fieldC(value: String); 


    _fromFFI(ptr: pointer, aEdges: Array<object>, bEdges: Array<object>, cEdges: Array<object>);
    static fromFooAndStrings(foo: Foo, dstr16X: String, utf8StrZ: String): BorrowedFieldsWithBounds;

    

}