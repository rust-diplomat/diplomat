Opaque(OpaqueDef { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "Float64Vec" }, methods: [Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 1 }, param_self: None, params: [Param { name: Check { _marker: PhantomData, buf: "v" }, ty: Slice(Primitive(Borrow { lifetime: NonStatic(TypeLifetime(0)), mutability: Immutable }, Float(F64))) }], output: Infallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(9) })))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "fill_slice" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 2 }, param_self: Some(ParamSelf { ty: Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: NonOptional, owner: Borrow { lifetime: NonStatic(TypeLifetime(0)), mutability: Immutable }, tcx_id: OpaqueId(9) }) }), params: [Param { name: Check { _marker: PhantomData, buf: "v" }, ty: Slice(Primitive(Borrow { lifetime: NonStatic(TypeLifetime(1)), mutability: Mutable }, Float(F64))) }], output: Infallible(None) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "set_value" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 2 }, param_self: Some(ParamSelf { ty: Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: NonOptional, owner: Borrow { lifetime: NonStatic(TypeLifetime(0)), mutability: Mutable }, tcx_id: OpaqueId(9) }) }), params: [Param { name: Check { _marker: PhantomData, buf: "new_slice" }, ty: Slice(Primitive(Borrow { lifetime: NonStatic(TypeLifetime(1)), mutability: Immutable }, Float(F64))) }], output: Infallible(None) }] })