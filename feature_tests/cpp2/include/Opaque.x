Opaque(OpaqueDef { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "Opaque" }, methods: [Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [], output: Infallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(11) })))) }, Method { docs: Docs("", [RustLink { path: Path { elements: [Ident("Something"), Ident("something")] }, typ: FnInStruct, display: Normal }, RustLink { path: Path { elements: [Ident("Something"), Ident("something_else")] }, typ: FnInStruct, display: Normal }, RustLink { path: Path { elements: [Ident("Something"), Ident("something_small")] }, typ: FnInStruct, display: Compact }, RustLink { path: Path { elements: [Ident("SomethingElse"), Ident("something")] }, typ: FnInStruct, display: Compact }, RustLink { path: Path { elements: [Ident("SomethingElse"), Ident("something_else")] }, typ: FnInStruct, display: Hidden }]), name: Check { _marker: PhantomData, buf: "assert_struct" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 1 }, param_self: Some(ParamSelf { ty: Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: NonOptional, owner: Borrow { lifetime: NonStatic(TypeLifetime(0)), mutability: Immutable }, tcx_id: OpaqueId(11) }) }), params: [Param { name: Check { _marker: PhantomData, buf: "s" }, ty: Struct(StructPath { lifetimes: TypeLifetimes { indices: [] }, tcx_id: StructId(2) }) }], output: Infallible(None) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "returns_usize" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [], output: Infallible(Some(OutType(Primitive(IntSize(Usize))))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "returns_imported" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [], output: Infallible(Some(OutType(Struct(Struct(StructPath { lifetimes: TypeLifetimes { indices: [] }, tcx_id: StructId(0) }))))) }] })