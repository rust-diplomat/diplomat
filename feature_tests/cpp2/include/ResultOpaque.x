Opaque(OpaqueDef { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "ResultOpaque" }, methods: [Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [Param { name: Check { _marker: PhantomData, buf: "i" }, ty: Primitive(Int(I32)) }], output: Fallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(6) }))), Some(Enum(EnumPath { tcx_id: EnumId(1) }))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new_failing_foo" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [], output: Fallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(6) }))), Some(Enum(EnumPath { tcx_id: EnumId(1) }))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new_failing_bar" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [], output: Fallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(6) }))), Some(Enum(EnumPath { tcx_id: EnumId(1) }))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new_failing_unit" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [], output: Fallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(6) }))), None) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new_failing_struct" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [Param { name: Check { _marker: PhantomData, buf: "i" }, ty: Primitive(Int(I32)) }], output: Fallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(6) }))), Some(Struct(Struct(StructPath { lifetimes: TypeLifetimes { indices: [] }, tcx_id: StructId(3) })))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new_in_err" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [Param { name: Check { _marker: PhantomData, buf: "i" }, ty: Primitive(Int(I32)) }], output: Fallible(None, Some(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(6) }))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new_in_enum_err" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [Param { name: Check { _marker: PhantomData, buf: "i" }, ty: Primitive(Int(I32)) }], output: Fallible(Some(OutType(Enum(EnumPath { tcx_id: EnumId(1) }))), Some(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(6) }))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "assert_integer" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 1 }, param_self: Some(ParamSelf { ty: Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [] }, optional: NonOptional, owner: Borrow { lifetime: NonStatic(TypeLifetime(0)), mutability: Immutable }, tcx_id: OpaqueId(6) }) }), params: [Param { name: Check { _marker: PhantomData, buf: "i" }, ty: Primitive(Int(I32)) }], output: Infallible(None) }] })