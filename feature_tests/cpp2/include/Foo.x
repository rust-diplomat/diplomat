Opaque(OpaqueDef { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "Foo" }, methods: [Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new" }, lifetime_env: LifetimeEnv { nodes: [Lifetime { ident: Check { _marker: PhantomData, buf: "a" }, longer: [], shorter: [] }], num_lifetimes: 1 }, param_self: None, params: [Param { name: Check { _marker: PhantomData, buf: "x" }, ty: Slice(Str(NonStatic(TypeLifetime(0)))) }], output: Infallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [NonStatic(TypeLifetime(0))] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(1) })))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "get_bar" }, lifetime_env: LifetimeEnv { nodes: [Lifetime { ident: Check { _marker: PhantomData, buf: "a" }, longer: [], shorter: [MethodLifetime(1)] }, Lifetime { ident: Check { _marker: PhantomData, buf: "b" }, longer: [MethodLifetime(0)], shorter: [] }], num_lifetimes: 2 }, param_self: Some(ParamSelf { ty: Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [NonStatic(TypeLifetime(0))] }, optional: NonOptional, owner: Borrow { lifetime: NonStatic(TypeLifetime(1)), mutability: Immutable }, tcx_id: OpaqueId(1) }) }), params: [], output: Infallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [NonStatic(TypeLifetime(1)), NonStatic(TypeLifetime(0))] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(0) })))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new_static" }, lifetime_env: LifetimeEnv { nodes: [Lifetime { ident: Check { _marker: PhantomData, buf: "a" }, longer: [], shorter: [] }], num_lifetimes: 1 }, param_self: None, params: [Param { name: Check { _marker: PhantomData, buf: "x" }, ty: Slice(Str(Static)) }], output: Infallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [NonStatic(TypeLifetime(0))] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(1) })))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "as_returning" }, lifetime_env: LifetimeEnv { nodes: [Lifetime { ident: Check { _marker: PhantomData, buf: "a" }, longer: [], shorter: [] }], num_lifetimes: 2 }, param_self: Some(ParamSelf { ty: Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [NonStatic(TypeLifetime(0))] }, optional: NonOptional, owner: Borrow { lifetime: NonStatic(TypeLifetime(1)), mutability: Immutable }, tcx_id: OpaqueId(1) }) }), params: [], output: Infallible(Some(OutType(Struct(Struct(StructPath { lifetimes: TypeLifetimes { indices: [NonStatic(TypeLifetime(0))] }, tcx_id: StructId(2) }))))) }, Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "extract_from_fields" }, lifetime_env: LifetimeEnv { nodes: [Lifetime { ident: Check { _marker: PhantomData, buf: "a" }, longer: [], shorter: [] }], num_lifetimes: 1 }, param_self: None, params: [Param { name: Check { _marker: PhantomData, buf: "fields" }, ty: Struct(StructPath { lifetimes: TypeLifetimes { indices: [NonStatic(TypeLifetime(0))] }, tcx_id: StructId(1) }) }], output: Infallible(Some(OutType(Opaque(OpaquePath { lifetimes: TypeLifetimes { indices: [NonStatic(TypeLifetime(0))] }, optional: Optional(true), owner: Own, tcx_id: OpaqueId(1) })))) }] })