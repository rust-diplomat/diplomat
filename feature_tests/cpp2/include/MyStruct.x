Struct(StructDef { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "MyStruct" }, fields: [StructField { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "a" }, ty: Primitive(Int(U8)) }, StructField { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "b" }, ty: Primitive(Bool) }, StructField { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "c" }, ty: Primitive(Int(U8)) }, StructField { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "d" }, ty: Primitive(Int(U64)) }, StructField { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "e" }, ty: Primitive(Int(I32)) }, StructField { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "f" }, ty: Primitive(Char) }, StructField { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "g" }, ty: Enum(EnumPath { tcx_id: EnumId(2) }) }], methods: [Method { docs: Docs("", []), name: Check { _marker: PhantomData, buf: "new" }, lifetime_env: LifetimeEnv { nodes: [], num_lifetimes: 0 }, param_self: None, params: [], output: Infallible(Some(OutType(Struct(Struct(StructPath { lifetimes: TypeLifetimes { indices: [] }, tcx_id: StructId(2) }))))) }] })