// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";

// Base enumerator definition
export class UnimportedEnum {
    #value = undefined;

    static values = new Map([
        ["A", 0],
        ["B", 1],
        ["C", 2]
    ]);

    constructor(value) {
        if (arguments.length > 1 && arguments[0] === diplomatRuntime.internalConstructor) {
            this.#value = arguments[1];
            return;
        }

        if (value instanceof UnimportedEnum) {
            this.#value = value.value;
            return;
        }

        let intVal = UnimportedEnum.values.get(value);

        // Nullish check, checks for null or undefined
        if (intVal == null) {
            this.#value = intVal;
            return;
        }

        throw TypeError(value + " is not a UnimportedEnum and does not correspond to any of its enumerator values.");
    }

    get value() {
        return [...UnimportedEnum.values.keys()][this.#value];
    }

    get ffiValue() {
        return this.#value;
    }

    static A = new UnimportedEnum(diplomatRuntime.internalConstructor, 0);
    static B = new UnimportedEnum(diplomatRuntime.internalConstructor, 1);
    static C = new UnimportedEnum(diplomatRuntime.internalConstructor, 2);
}