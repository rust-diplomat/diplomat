// generated by diplomat-tool
import type { ScalarPairWithPadding } from "./ScalarPairWithPadding"
import type { ScalarPairWithPadding_obj } from "./ScalarPairWithPadding"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";

export type BigStructWithStuff_obj = {
    first: number;
    second: number;
    third: number;
    fourth: ScalarPairWithPadding_obj;
    fifth: number;
};



/**
 * Testing JS-specific layout/padding behavior
 * Also being used to test CPP backends taking structs with primitive values.
 */
export class BigStructWithStuff {
    get first(): number;
    set first(value: number);
    get second(): number;
    set second(value: number);
    get third(): number;
    set third(value: number);
    get fourth(): ScalarPairWithPadding;
    set fourth(value: ScalarPairWithPadding);
    get fifth(): number;
    set fifth(value: number);
    /** @internal */
    static fromFields(structObj : BigStructWithStuff_obj) : BigStructWithStuff;

    /**
    * Create `BigStructWithStuff` from an object that contains all of `BigStructWithStuff`s fields.
    * Optional fields do not need to be included in the provided object.
    */
    constructor(structObj: BigStructWithStuff_obj);


    assertValue(extraVal: number): void;
}