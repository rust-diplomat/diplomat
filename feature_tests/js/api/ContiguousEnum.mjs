// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";

// Base enumerator definition
export class ContiguousEnum {
    #value = undefined;

    static values = new Map([
        ["C", 0],
        ["D", 1],
        ["E", 2],
        ["F", 3]
    ]);

    constructor(value) {
        if (arguments.length > 1 && arguments[0] === diplomatRuntime.internalConstructor) {
            this.#value = arguments[1];
            return;
        }

        if (value instanceof ContiguousEnum) {
            this.#value = value.value;
            return;
        }

        let intVal = ContiguousEnum.values.get(value);

        // Nullish check, checks for null or undefined
        if (intVal == null) {
            this.#value = intVal;
            return;
        }

        throw TypeError(value + " is not a ContiguousEnum and does not correspond to any of its enumerator values.");
    }

    get value() {
        return [...ContiguousEnum.values.keys()][this.#value];
    }

    get ffiValue() {
        return this.#value;
    }

    static C = new ContiguousEnum(diplomatRuntime.internalConstructor, 0);
    static D = new ContiguousEnum(diplomatRuntime.internalConstructor, 1);
    static E = new ContiguousEnum(diplomatRuntime.internalConstructor, 2);
    static F = new ContiguousEnum(diplomatRuntime.internalConstructor, 3);
}