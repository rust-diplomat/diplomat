// generated by diplomat-tool
import { AttrOpaque1Renamed } from "./AttrOpaque1Renamed.mjs"
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";

const RenamedOpaqueIterator_box_destroy_registry = new FinalizationRegistry((ptr) => {
    wasm.namespace_OpaqueIterator_destroy(ptr);
});

export class RenamedOpaqueIterator {
    // Internal ptr reference:
    #ptr = null;

    // Lifetimes are only to keep dependencies alive.
    // Since JS won't garbage collect until there are no incoming edges.
    #selfEdge = [];
    #aEdge = [];
    
    constructor(ptr, selfEdge, aEdge) {
        
        
        this.#aEdge = aEdge;
        
        this.#ptr = ptr;
        this.#selfEdge = selfEdge;
        // Unconditionally register to destroy when this object is ready to garbage collect.
        RenamedOpaqueIterator_box_destroy_registry.register(this, this.#ptr);
    }

    get ffiValue() {
        return this.#ptr;
    }

    #iteratorNext() {
        const result = wasm.namespace_OpaqueIterator_next(this.ffiValue);
    
        try {
            return result === 0 ? null : new AttrOpaque1Renamed(result, []);
        }
        
        finally {}
    }

    
    next() {
    	const out = this.#iteratorNext();
    
    	return {
    		value: out,
    		done: out === null,
    	};
    }
}