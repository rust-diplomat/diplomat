// generated by diplomat-tool
import type { OptionEnum } from "./OptionEnum"
import type { OptionInputStruct } from "./OptionInputStruct"
import type { OptionStruct } from "./OptionStruct"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";

export class OptionOpaque {
    

    get ffiValue(): pointer;

    static new_(i: number): OptionOpaque | null;

    static newNone(): OptionOpaque | null;

    static returns(): OptionStruct | null;

    optionIsize(): number | null;

    optionUsize(): number | null;

    optionI32(): number | null;

    optionU32(): number | null;

    static newStruct(): OptionStruct;

    static newStructNones(): OptionStruct;

    assertInteger(i: number): void;

    static optionOpaqueArgument(arg: OptionOpaque | null): boolean;

    static acceptsOptionU8(arg: number | null): number | null;

    static acceptsOptionEnum(arg: OptionEnum | null): OptionEnum | null;

    static acceptsOptionInputStruct(arg: OptionInputStruct | null): OptionInputStruct | null;

    static returnsOptionInputStruct(): OptionInputStruct;
}