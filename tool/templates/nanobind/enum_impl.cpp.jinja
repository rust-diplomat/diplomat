{%- let is_self_opaque = false -%}
	nb::class_<{{type_name}}> e_class(mod, "{{type_name_unnamespaced}}");

	nb::enum_<{{type_name}}::Value>(e_class, "{{type_name_unnamespaced}}")
		{%- for value in values %}
		.value("{{value}}", {{type_name}}::{{value}})
		{%- endfor %}
		.export_values();

	e_class
		.def(nb::init_implicit<{{type_name}}::Value>())
		.def(nb::self == {{type_name}}::Value())
		.def("__repr__", [](const {{type_name}}& self){
			return nb::str(nb::cast({{type_name}}::Value(self)));
		});

