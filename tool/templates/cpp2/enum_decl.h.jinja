{%- if let Some(ns) = namespace -%}
namespace {{ns}} {
{%endif-%}
class {{type_name_unnamespaced}} {
	{{ctype}} value;

public:
	enum Value {
{%- for enum_variant in ty.variants %}
		{{fmt.fmt_enum_variant(enum_variant)}},
{%- endfor %}
	};

{%- for m in methods %}

	{% include "method_decl.h.jinja" %}
{%- endfor %}

	inline {{type_name_unnamespaced}}({{type_name}}::Value cpp_value);
	inline {{type_name_unnamespaced}}({{ctype}} c_enum) : value(c_enum) {};

	inline {{ctype}} AsFFI() const;
	inline static {{type_name}} FromFFI({{ctype}} c_enum);
};

{% if namespace.is_some() -%}
}
{%-endif%}
