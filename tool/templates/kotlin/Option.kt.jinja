internal class Option{{type_name}}: Structure(), Structure.ByValue  {
    {%- match default%}
    {%- when Some with (default_value)%}
    @JvmField
    internal var value: {{type_name}} = {{default_value}}
    
    {% when None -%}
    {%- endmatch -%}
    @JvmField
    internal var isOk: Byte = 0

    // Define the fields of the struct
    override fun getFieldOrder(): List<String> {
        return listOf("value", "isOk")
    }

    internal fun option(): {{type_name}}? {
        if (isOk == 1.toByte()) {
            {%- match default %}
            {%- when Some with (_) %}
            return value
            {%- when None %}
            return Unit
            {%- endmatch %}
        } else {
            return null
        }
    }
}
