  {%- if !m.docs.is_empty() %}
  /// {{m.docs.replace('\n', "\n  ")}}
  {%- endif %}
  {{ m.declaration }} {
    {%- if m.needs_arena %}
    final temp = ffi2.Arena();
    {%- endif %}

    {%- for slice_conversion in m.slice_conversions %}
    {{ slice_conversion }}
    {%- endfor %}

    {%- for lifetime in m.lifetimes.all_lifetimes() %}
    {%- let maybe_lifetime_info = m.method_lifetimes_map.get(lifetime) %}
    {%- if maybe_lifetime_info.is_some() %}
    {%- let lifetime_info = maybe_lifetime_info.unwrap() %}
    // This lifetime edge depends on lifetimes: {% for longer in lifetime_info.all_longer_lifetimes.iter().copied() -%} {%- if !loop.first %}, {% endif -%} '{{m.lifetimes.fmt_lifetime(longer)}} {%- endfor %}
    core.List<Object> edge_{{m.lifetimes.fmt_lifetime(lifetime)}} = [
      {%- for incoming_edge in lifetime_info.incoming_edges.iter() %}
      {%- if !loop.first %}, {% endif -%} {{incoming_edge}}
      {%- endfor -%}
    ];
    {%- endif %}
    {%- endfor %}


    {%- if m.method.output.is_writeable() %}
    final writeable = _Writeable();
    {%- endif %}
    {%- if !m.method.output.is_ffi_unit() %}
    final result = {% else %}
    {% endif -%}
    _{{ m.c_method_name -}}(
        {%- for param in m.param_conversions %}
        {%- if loop.first %}{% else %}, {% endif -%}
        {{ param }}
        {%- endfor -%}
    );
    {%- if m.needs_arena %}
    temp.releaseAll();
    {%- endif %}
    {%- match m.return_expression %}
    {%- when Some with (statement) %}
    {{statement.replace('\n', "\n    ")}}
    {%- when None %}
    {%- endmatch %}
  }{% if m.declaration.starts_with("static final") %}();{% endif %}
