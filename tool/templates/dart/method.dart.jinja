  {%- if !m.docs.is_empty() %}
  /// {{m.docs.replace('\n', "\n  ")}}
  {%- endif %}
  {{ m.declaration }} {
    {%- if m.needs_arena %}
    final temp = ffi2.Arena();
    {%- endif %}
    {%- for slice_conversion in m.slice_conversions %}
    {{ slice_conversion }}
    {%- endfor %}
    {%- if m.method.is_writeable() %}
    final writeable = _Writeable();
    {%- endif %}
    {%- if m.method.output.returns_value() %}
    final result = {% else %}
    {% endif -%}
    _{{ m.c_method_name -}}(
        {%- for param in m.param_conversions %}
        {%- if loop.first %}{% else %}, {% endif -%}
        {{ param }}
        {%- endfor -%}
    );
    {%- if m.needs_arena %}
    temp.releaseAll();
    {%- endif %}
    {%- match m.return_expression %}
    {%- when Some with (statement) %}
    {{statement.replace('\n', "\n    ")}}
    {%- when None %}
    {%- endmatch %}
  }{% if m.declaration.starts_with("static final") %}();{% endif %}

  // ignore: non_constant_identifier_names
  static final _{{ m.c_method_name }} =
    _capi<ffi.NativeFunction<{{ m.return_type_ffi }} Function(
    {%- for param in m.param_types_ffi %}
        {%- if !loop.first %}, {% endif -%}
        {{ param }}
    {%- endfor -%}
  )>>('{{ m.c_method_name }}')
      .asFunction<{{ m.return_type_ffi_cast }} Function(
        {%- for param in m.param_types_ffi_cast %}
          {%- if !loop.first %}, {% endif -%}
          {{ param }}
        {%- endfor -%}
      )>(isLeaf: true);