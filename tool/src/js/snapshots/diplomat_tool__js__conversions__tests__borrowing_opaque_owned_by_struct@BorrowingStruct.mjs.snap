---
source: tool/src/js/conversions.rs
expression: out_texts.get(out).unwrap()
---
import wasm from "./diplomat-wasm.mjs"
import * as diplomatRuntime from "./diplomat-runtime.mjs"
import { BorrowingOpaque } from "./BorrowingOpaque.mjs"

export class BorrowingStruct {
  constructor(underlying, edges_a) {
    this.opaque = new BorrowingOpaque(diplomatRuntime.ptrRead(wasm, underlying), true, [...edges_a]);
    this.x = (new Uint8Array(wasm.memory.buffer, underlying + 4, 1))[0];
  }

  static new(arg_opaque) {
    return (() => {
      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);
      wasm.BorrowingStruct_new(diplomat_receive_buffer, arg_opaque.underlying);
      const out = new BorrowingStruct(diplomat_receive_buffer, [arg_opaque]);
      wasm.diplomat_free(diplomat_receive_buffer, 5, 4);
      return out;
    })();
  }
}

