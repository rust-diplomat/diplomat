---
source: tool/src/js/structs.rs
expression: out_texts.get(out).unwrap()
---
import wasm from "./wasm.mjs"
import * as diplomatRuntime from "./diplomat-runtime.mjs"
const diplomat_alloc_destroy_registry = new FinalizationRegistry(obj => {
  wasm.diplomat_free(obj["ptr"], obj["size"], obj["align"]);
});

const MyStruct_box_destroy_registry = new FinalizationRegistry(underlying => {
  wasm.MyStruct_destroy(underlying);
});

export class MyStruct {
  constructor(underlying) {
    this.underlying = underlying;
  }

  static new_str(v) {
    v = diplomatRuntime.DiplomatBuf.str(wasm, v);
    const diplomat_out = (() => {
      const underlying = wasm.MyStruct_new_str(v.ptr, v.size);
      const out = new MyStruct(underlying);
      MyStruct_box_destroy_registry.register(out, underlying);
      return out;
    })();
    v.free();
    return diplomat_out;
  }

  set_str(new_str) {
    new_str = diplomatRuntime.DiplomatBuf.str(wasm, new_str);
    wasm.MyStruct_set_str(this.underlying, new_str.ptr, new_str.size);
    new_str.free();
  }
}

