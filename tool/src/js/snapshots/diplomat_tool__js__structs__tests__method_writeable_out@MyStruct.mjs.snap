---
source: tool/src/js/structs.rs
expression: out_texts.get(out).unwrap()
---
import wasm from "./diplomat-wasm.mjs"
import * as diplomatRuntime from "./diplomat-runtime.mjs"

const MyStruct_box_destroy_registry = new FinalizationRegistry(underlying => {
  wasm.MyStruct_destroy(underlying);
});

export class MyStruct {
  #lifetimeEdges = [];
  constructor(underlying, owned, edges) {
    this.underlying = underlying;
    this.#lifetimeEdges.push(...edges);
    if (owned) {
      MyStruct_box_destroy_registry.register(this, underlying);
    }
  }

  write() {
    return diplomatRuntime.withWriteable(wasm, (writeable) => {
      return wasm.MyStruct_write(this.underlying, writeable);
    });
  }

  write_unit() {
    return diplomatRuntime.withWriteable(wasm, (writeable) => {
      return wasm.MyStruct_write_unit(this.underlying, writeable);
    });
  }

  write_result() {
    return diplomatRuntime.withWriteable(wasm, (writeable) => {
      return (() => {
        const diplomat_receive_buffer = wasm.diplomat_alloc(2, 1);
        wasm.MyStruct_write_result(diplomat_receive_buffer, this.underlying, writeable);
        const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 1);
        if (is_ok) {
          const ok_value = {};
          wasm.diplomat_free(diplomat_receive_buffer, 2, 1);
          return ok_value;
        } else {
          const throw_value = (new Uint8Array(wasm.memory.buffer, diplomat_receive_buffer, 1))[0];
          wasm.diplomat_free(diplomat_receive_buffer, 2, 1);
          throw new diplomatRuntime.FFIError(throw_value);
        }
      })();
    });
  }
}

