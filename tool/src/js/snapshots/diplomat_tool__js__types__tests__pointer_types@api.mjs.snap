---
source: tool/src/js/types.rs
expression: out_texts.get(out).unwrap()

---
import wasm from "./wasm.mjs"
import * as diplomatRuntime from "./diplomat-runtime.mjs"
const diplomat_alloc_destroy_registry = new FinalizationRegistry(obj => {
  wasm.diplomat_free(obj["ptr"], obj["size"], obj["align"]);
});

const MyOpaqueStruct_box_destroy_registry = new FinalizationRegistry(underlying => {
  wasm.MyOpaqueStruct_destroy(underlying);
});

export class MyOpaqueStruct {
  constructor(underlying) {
    this.underlying = underlying;
  }
}

const MyStruct_box_destroy_registry = new FinalizationRegistry(underlying => {
  wasm.MyStruct_destroy(underlying);
});

export class MyStruct {
  constructor(underlying) {
    this.underlying = underlying;
  }

  static new(foo, bar) {
    const diplomat_out = (() => {
      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);
      wasm.MyStruct_new(diplomat_receive_buffer, foo.underlying, bar.underlying);
      const out = new MyStruct(diplomat_receive_buffer);
      const out_a_value = out.a;
      MyOpaqueStruct_box_destroy_registry.register(out_a_value, out_a_value.underlying);
      Object.defineProperty(out, "a", { value: out_a_value });
      diplomat_alloc_destroy_registry.register(out, {
        ptr: out.underlying,
        size: 5,
        align: 4,
      });
      return out;
    })();
    return diplomat_out;
  }

  get a() {
    return (() => {
      const out = new MyOpaqueStruct((new Uint32Array(wasm.memory.buffer, this.underlying + 0, 1))[0]);
      out.owner = null;
      return out;
    })();
  }

  get b() {
    return (new Uint8Array(wasm.memory.buffer, this.underlying + 4, 1))[0];
  }
}

