---
source: tool/src/js/types.rs
expression: out_texts.get(out).unwrap()
---
import wasm from "./wasm.mjs"
import * as diplomatRuntime from "./diplomat-runtime.mjs"
const diplomat_alloc_destroy_registry = new FinalizationRegistry(obj => {
  wasm.diplomat_free(obj["ptr"], obj["size"], obj["align"]);
});

const MyOpaqueStruct_box_destroy_registry = new FinalizationRegistry(underlying => {
  wasm.MyOpaqueStruct_destroy(underlying);
});

export class MyOpaqueStruct {
  #lifetimeEdges = [];
  constructor(underlying, owned, edges) {
    this.underlying = underlying;
    this.#lifetimeEdges.push(...edges);
    if (owned) {
      MyOpaqueStruct_box_destroy_registry.register(this, underlying);
    }
  }
}

export class MyStruct {
  constructor(underlying) {
    this.a = (new Uint8Array(wasm.memory.buffer, underlying, 1))[0];
    this.b = (new Uint8Array(wasm.memory.buffer, underlying + 1, 1))[0];
  }

  static new() {
    return (() => {
      const diplomat_receive_buffer = wasm.diplomat_alloc(3, 1);
      wasm.MyStruct_new(diplomat_receive_buffer);
      const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 2);
      if (is_ok) {
        const ok_value = new MyStruct(diplomat_receive_buffer);
        wasm.diplomat_free(diplomat_receive_buffer, 3, 1);
        return ok_value;
      } else {
        const throw_value = (new Uint8Array(wasm.memory.buffer, diplomat_receive_buffer, 1))[0];
        wasm.diplomat_free(diplomat_receive_buffer, 3, 1);
        throw new diplomatRuntime.FFIError(throw_value);
      }
    })();
  }
}

