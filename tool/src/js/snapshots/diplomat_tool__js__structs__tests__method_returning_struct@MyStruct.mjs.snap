---
source: tool/src/js/structs.rs
expression: out_texts.get(out).unwrap()
---
import wasm from "./diplomat-wasm.mjs"
import * as diplomatRuntime from "./diplomat-runtime.mjs"
import { NonOpaqueStruct } from "./NonOpaqueStruct.mjs"

const MyStruct_box_destroy_registry = new FinalizationRegistry(underlying => {
  wasm.MyStruct_destroy(underlying);
});

export class MyStruct {
  #lifetimeEdges = [];
  constructor(underlying, owned, edges) {
    this.underlying = underlying;
    this.#lifetimeEdges.push(...edges);
    if (owned) {
      MyStruct_box_destroy_registry.register(this, underlying);
    }
  }

  get_non_opaque() {
    return (() => {
      const diplomat_receive_buffer = wasm.diplomat_alloc(8, 4);
      wasm.MyStruct_get_non_opaque(diplomat_receive_buffer, this.underlying);
      const out = new NonOpaqueStruct(diplomat_receive_buffer);
      wasm.diplomat_free(diplomat_receive_buffer, 8, 4);
      return out;
    })();
  }
}

