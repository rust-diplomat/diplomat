---
source: tool/src/js/types.rs
expression: out_texts.get(out).unwrap()
---
import wasm from "./wasm.mjs"
import * as diplomatRuntime from "./diplomat-runtime.mjs"
const diplomat_alloc_destroy_registry = new FinalizationRegistry(obj => {
  wasm.diplomat_free(obj["ptr"], obj["size"], obj["align"]);
});

const MyOpaqueStruct_box_destroy_registry = new FinalizationRegistry(underlying => {
  wasm.MyOpaqueStruct_destroy(underlying);
});

export class MyOpaqueStruct {
  constructor(underlying) {
    this.underlying = underlying;
  }
}

export class MyStruct {
  constructor(underlying) {
    this.a = (() => {
      const option_ptr = diplomatRuntime.ptrRead(wasm, underlying);
      return (option_ptr == 0) ? null : (() => {
        const underlying = option_ptr;
        const out = new MyOpaqueStruct(underlying);
        MyOpaqueStruct_box_destroy_registry.register(out, underlying);
        return out;
      })();
    })();
  }
}

