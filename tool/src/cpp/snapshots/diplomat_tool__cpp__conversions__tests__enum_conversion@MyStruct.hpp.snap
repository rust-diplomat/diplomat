---
source: tool/src/cpp/conversions.rs
expression: out_texts.get(out).unwrap()

---
#ifndef MyStruct_HPP
#define MyStruct_HPP
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <algorithm>
#include <memory>
#include <variant>
#include <optional>
#include "diplomat_runtime.hpp"

namespace capi {
#include "MyStruct.h"
}

#include "MyEnum.hpp"

/**
 * A destruction policy for using MyStruct with std::unique_ptr.
 */
struct MyStructDeleter {
  void operator()(capi::MyStruct* l) const noexcept {
    capi::MyStruct_destroy(l);
  }
};
struct MyStruct {
 public:
  uint8_t a;
  MyEnum b;
};


#endif

