---
source: tool/src/cpp/types.rs
expression: out_texts.get(out).unwrap()
---
#ifndef MyStruct_HPP
#define MyStruct_HPP
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <algorithm>
#include <memory>
#include <variant>

#include "mozilla/Maybe.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/Span.h"
#include "diplomat_runtime.hpp"

#include "MyStruct.h"

class MyOpaqueStruct;

/**
 * A destruction policy for using MyStruct with mozilla::UniquePtr.
 */
struct MyStructDeleter {
  void operator()(capi::MyStruct* l) const noexcept {
    capi::MyStruct_destroy(l);
  }
};
struct MyStruct {
 public:
  mozilla::Maybe<MyOpaqueStruct> a;
};


#endif

