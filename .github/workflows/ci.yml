name: Diplomat CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check rustfmt
      run: cargo fmt --all -- --check
    - name: Check clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Generate FFI examples
      run: cd example && ./gen_all.sh
    - name: Test example is fresh
      run: git diff --exit-code
    - name: Generate feature tests
      run: cd feature_tests && ./gen_all.sh
    - name: Test example is fresh
      run: git diff --exit-code
  tests-and-example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build tests
      run: cd feature_tests && cargo build
    - name: CPP tests
      run: cd feature_tests/cpp && make CXX=g++-10
    - name: Build examples
      run: cd example && cargo build
    - name: CPP examples
      run: cd example/cpp && make CXX=g++-10
    - name: C examples
      run: cd example/c && make
    - name: C2 examples
      run: cd example/c2 && make
    - name: C2 example self-contained
      run: cd example/c2 && find . -name "*.h" | xargs -I{} g++ {} 
    - name: C2 feature_tests self-contained
      run: cd feature_tests/c2 && find . -name "*.h" | xargs -I{} g++ {} 
  tests-and-example-wasm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Load Rust toolchain for WASM.
      run: rustup target add wasm32-unknown-unknown
    - name: Install Node.js v14.17.0
      uses: actions/setup-node@v1
      with:
        node-version: 14.17.0
    - name: Build feature tests
      run: cd feature_tests && cargo build --target wasm32-unknown-unknown && cp ../target/wasm32-unknown-unknown/debug/diplomat_feature_tests.wasm ./js/api
    - name: install node deps for feature_tests
      run: cd feature_tests/js && npm install
    - name: test feature_tests
      run: cd feature_tests/js && npm run test
    - name: Build examples
      run: cd example && cargo build --target wasm32-unknown-unknown && cp ../target/wasm32-unknown-unknown/debug/diplomat_example.wasm ./js/lib/api
    - name: install node deps for example lib
      run: cd example/js/lib && npm install
    - name: test example lib
      run: cd example/js/lib && npm run test
    - name: install node deps for example app
      run: cd example/js/app && npm install
    - name: test example app
      run: cd example/js/app && npm run test