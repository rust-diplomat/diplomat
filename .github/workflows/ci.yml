name: Diplomat CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check rustfmt
      run: cargo fmt --all -- --check
    - name: Check clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
  gen:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # Cargo-make boilerplate
    - name: Get cargo-make version
      id: cargo-make-version
      run: |
        echo "::set-output name=hash::$(cargo search cargo-make | grep '^cargo-make =' | md5sum)"
      shell: bash
    - name: Attempt to load cached cargo-make
      uses: actions/cache@v2
      id: cargo-make-cache
      with:
        path: |
          ~/.cargo/bin/cargo-make
          ~/.cargo/bin/cargo-make.exe
        key: ${{ runner.os }}-make-${{ steps.cargo-make-version.outputs.hash }}
    - name: Install cargo-make
      if: steps.cargo-make-cache.outputs.cache-hit != 'true'
      uses: actions-rs/install@v0.1.2
      with:
        crate: cargo-make
        version: latest
    - uses: dart-lang/setup-dart@v1

    - name: Run regeneration
      run: cargo make gen
    - name: Test code is fresh
      run: git add . && git diff --cached --exit-code
  test-native:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # Cargo-make boilerplate
    - name: Get cargo-make version
      id: cargo-make-version
      run: |
        echo "::set-output name=hash::$(cargo search cargo-make | grep '^cargo-make =' | md5sum)"
      shell: bash
    - name: Attempt to load cached cargo-make
      uses: actions/cache@v2
      id: cargo-make-cache
      with:
        path: |
          ~/.cargo/bin/cargo-make
          ~/.cargo/bin/cargo-make.exe
        key: ${{ runner.os }}-make-${{ steps.cargo-make-version.outputs.hash }}
    - name: Install cargo-make
      if: steps.cargo-make-cache.outputs.cache-hit != 'true'
      uses: actions-rs/install@v0.1.2
      with:
        crate: cargo-make
        version: latest

    - name: Native tests
      run: cargo make test-native
  test-wasm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Load Rust toolchain for WASM.
      run: rustup target add wasm32-unknown-unknown
    - name: Install Node.js v14.17.0
      uses: actions/setup-node@v1
      with:
        node-version: 14.17.0

    # Cargo-make boilerplate
    - name: Get cargo-make version
      id: cargo-make-version
      run: |
        echo "::set-output name=hash::$(cargo search cargo-make | grep '^cargo-make =' | md5sum)"
      shell: bash
    - name: Attempt to load cached cargo-make
      uses: actions/cache@v2
      id: cargo-make-cache
      with:
        path: |
          ~/.cargo/bin/cargo-make
          ~/.cargo/bin/cargo-make.exe
        key: ${{ runner.os }}-make-${{ steps.cargo-make-version.outputs.hash }}
    - name: Install cargo-make
      if: steps.cargo-make-cache.outputs.cache-hit != 'true'
      uses: actions-rs/install@v0.1.2
      with:
        crate: cargo-make
        version: latest

    - name: Run wasm tests
      run: cargo make test-wasm

  test-dart:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Dart
      uses: dart-lang/setup-dart@v1

    # Cargo-make boilerplate
    - name: Get cargo-make version
      id: cargo-make-version
      run: |
        echo "::set-output name=hash::$(cargo search cargo-make | grep '^cargo-make =' | md5sum)"
      shell: bash
    - name: Attempt to load cached cargo-make
      uses: actions/cache@v2
      id: cargo-make-cache
      with:
        path: |
          ~/.cargo/bin/cargo-make
          ~/.cargo/bin/cargo-make.exe
        key: ${{ runner.os }}-make-${{ steps.cargo-make-version.outputs.hash }}
    - name: Install cargo-make
      if: steps.cargo-make-cache.outputs.cache-hit != 'true'
      uses: actions-rs/install@v0.1.2
      with:
        crate: cargo-make
        version: latest

    - name: Run Dart tests
      run: cargo make test-dart